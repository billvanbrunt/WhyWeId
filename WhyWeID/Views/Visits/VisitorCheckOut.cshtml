@model WhyWeID.Models.Visit


<h1 style="color:#395b8b;font-weight:bold;">Visitor Check out for:</h1>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <center>
        <div class="form-group" style="border:solid;border-color:#395b8b;border-width:3px;width:500px;">
            <div style="background-color:#395b8b;color:#fff;text-Align:left;width:100%">  Sign out visitor</div>
            <div >
                <br />
                <div id="divHiddenFields" style="display:none;">
                    @{ Html.EnableClientValidation(false);}
                        @Html.EditorFor(model => model.SchoolId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.EditorFor(model => model.AreaToVisit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AreaToVisit, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.ReasonForVisit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReasonForVisit, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.SchoolYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SchoolYear, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.VisitDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VisitDate, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.TimeIn, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.EditorFor(model => model.TimeOut, new { htmlAttributes = new { @class = "form-control" } })
                    
                </div>
                <p>&nbsp;&nbsp;Click OK to sign out @Html.DisplayFor(model => model.FNFFullName) from the @Html.DisplayFor(model => model.Area.Description) for @Html.DisplayFor(model => model.Reason.Description) </p>

                @*<input type="submit" value="OK" class="btn btn-default" />*@
                <button onclick="location.href='@Url.Action("VisitorCheckOut", "Visits")';return true;" class="btn btn-default">submit</button>
                <button onclick="location.href='@Url.Action("Index", "Visits")';return false;" class="btn btn-default">Cancel</button>
                <br /><br />

            </div>
        </div>
    </center>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

